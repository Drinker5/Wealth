// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wealth.CurrencyManagement.Infrastructure.UnitOfWorks;

#nullable disable

namespace Wealth.CurrencyManagement.Infrastructure.Migrations
{
    [DbContext(typeof(WealthDbContext))]
    [Migration("20250617125802_FKs")]
    partial class FKs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wealth.CurrencyManagement.Domain.Currencies.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Wealth.CurrencyManagement.Domain.ExchangeRates.ExchangeRate", b =>
                {
                    b.Property<string>("BaseCurrencyId")
                        .HasColumnType("text");

                    b.Property<string>("TargetCurrencyId")
                        .HasColumnType("text");

                    b.Property<DateTime>("ValidOnDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.HasKey("BaseCurrencyId", "TargetCurrencyId", "ValidOnDate");

                    b.HasIndex("TargetCurrencyId");

                    b.ToTable("ExchangeRates");
                });

            modelBuilder.Entity("Wealth.CurrencyManagement.Domain.ExchangeRates.ExchangeRate", b =>
                {
                    b.HasOne("Wealth.CurrencyManagement.Domain.Currencies.Currency", null)
                        .WithMany()
                        .HasForeignKey("BaseCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wealth.CurrencyManagement.Domain.Currencies.Currency", null)
                        .WithMany()
                        .HasForeignKey("TargetCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
