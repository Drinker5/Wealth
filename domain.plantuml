@startuml Domain
allowmixing

package Summary {
    object IncomeSummary{
        Currencies
        Wallets
        Deposits
    }

    interface API {

    }
}

package PortfolioManagement {
    abstract Portfolio {
        Id
        Assets
        Name
        Currencies
        --
        Add(Name)
        Rename(NewName)
        AddCurrency(Money)
    }
    note right of Portfolio : "ИИС, Бр. счёт"

    object PortfolioAsset {
        InstrumentId
        Quantity
    }

    Portfolio --> PortfolioAsset

    interface API {
        Porfolios
        PorfolioAssets
        CreatePorfolio()
        AddCurrency(Money)
    }
}

package PortfolioOperations {
    abstract PortfolioOperation {
        Id
        PortfolioId
        InstrumentId
        DateTime
        Money
        Type : Trade, Cash, Currency
    }
    object Trade {
        Type : Buy, Sell
        Amount
        --
        Add()
    }

    object Cash {
        Type : Coupon, Dividend, Amortization
        --
        Add()
    }

    object Currency {
        Type : Add, Withdraw
        --
        Add()
    }

    abstract SplitOperation {
        Id
        InstrumentId
        Rate
        DateTime
        --
        Add()
    }

    PortfolioOperation --> Cash
    PortfolioOperation --> Trade
    PortfolioOperation --> Currency

    interface API {
        OperationsByPortfolio
        OperationsByInstrument
        Buy(Quantity, Money)
        Sell(Quantity, Money)
        AddCoupon(Money)
        AddDividend(Money)
        Split1To(Rate)
        ReverseSplitTo1(Rate)
        AddToAccount(Money)
        Withdraw(Money)
    }
}

package CurrencyManagement {
    abstract Currency {
        Id
        Name
        Symbol
        ExchangeRates
    }

    entity ExchangeRate {
        BaseCurrencyId
        TargetCurrencyId
        Rate
        ValidOnDate
    }

    object Money_VO {
        CurrencyId
        Amount
    }

    Currency --> ExchangeRate

    interface API {
        Currencies
        Echange(BaseCurrencyId, TargetCurrencyId)
    }
}

package WalletManagement {
    abstract Wallet {
        Id
        Name
        Money
        Operations
        --
        Add
        Change(NewMoney)
    }

    entity WalletOperation {
        Id
        WalletId
        Money
        Type : Income, Expense
        Date
    }

    interface API {
        Wallets
        AddWallet(CurrencyId)
        ChangeMoney(WalletId, Money)
        AddExpense(WalletId, Money)
        AddIncome(WalletId, Money)
    }

    Wallet --> WalletOperation
}

package StrategyTracking {
    abstract Strategy {
        Id
        Name
        Components
    }

    entity StrategyComponent {
        StrategyId
        InstrumentId
        Weight
    }

    Strategy --> StrategyComponent

    interface API {
        Strategy
        AddComponent(StrategyId)
        ChangeWeights(StrategyId)
    }
}

package InstrumentManagement {

    abstract Instrument {
        Id
        Price : Money
        ISIN
        Name
        Type
    }
    object Stock {
        Dividend
    }

    object Bond {
        Coupon
    }

    object Dividend_VO {
        CurrencyId
        ValuePerYear
    }

    object Coupon_VO {
        CurrencyId
        ValuePerYear
    }

    Instrument --> Stock
    Instrument --> Bond

    interface API {
        Instruments
        Instrument
        Stocks
        Bonds
        AddStock()
        AddBond()
        ChangeDividend()
        ChangeCoupon()
        ChangePrice()
    }
}

package DepositManagement {
    abstract Deposit {
        Id
        Name
        Yield
        Operations
        Invest(Money)
        Withdraw(Money)
        Interest(Money)
    }

    entity DepositOperation {
        Id
        Type
        Money
        DateTime
    }
    note right of DepositOperation : "Add, Withdraw"

    object Yield {
        PercentPerYear
    }


    Deposit --> Yield
    Deposit --> DepositOperation

    interface API {
        Deposits
        Deposit
        Invest(Money)
        Withdraw(Money)
        AddInterest(Money)
    }
}

InstrumentManagement --> CurrencyManagement
PortfolioManagement --> InstrumentManagement
PortfolioOperations --> PortfolioManagement
StrategyTracking --> InstrumentManagement
WalletManagement --> CurrencyManagement
DepositManagement --> CurrencyManagement
Summary --> WalletManagement
Summary --> PortfolioManagement
Summary --> DepositManagement
@enduml

