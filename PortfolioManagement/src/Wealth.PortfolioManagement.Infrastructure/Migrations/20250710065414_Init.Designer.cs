// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wealth.PortfolioManagement.Infrastructure.UnitOfWorks;

#nullable disable

namespace Wealth.PortfolioManagement.Infrastructure.Migrations
{
    [DbContext(typeof(WealthDbContext))]
    [Migration("20250710065414_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("PortfolioIdHiLo")
                .IncrementsBy(10);

            modelBuilder.Entity("Wealth.PortfolioManagement.Domain.Portfolios.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "PortfolioIdHiLo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("Wealth.PortfolioManagement.Domain.Portfolios.PortfolioAsset", b =>
                {
                    b.Property<int>("PortfolioId")
                        .HasColumnType("integer");

                    b.Property<Guid>("InstrumentId")
                        .HasColumnType("uuid");

                    b.Property<string>("ISIN")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("PortfolioId", "InstrumentId");

                    b.ToTable("PortfolioAsset");
                });

            modelBuilder.Entity("Wealth.PortfolioManagement.Domain.Portfolios.PortfolioCurrency", b =>
                {
                    b.Property<int>("PortfolioId")
                        .HasColumnType("integer");

                    b.Property<string>("CurrencyId")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.HasKey("PortfolioId", "CurrencyId");

                    b.ToTable("PortfolioCurrency");
                });

            modelBuilder.Entity("Wealth.PortfolioManagement.Infrastructure.Repositories.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTimeOffset>("OccurredOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("ProcessedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages");
                });

            modelBuilder.Entity("Wealth.PortfolioManagement.Domain.Portfolios.PortfolioAsset", b =>
                {
                    b.HasOne("Wealth.PortfolioManagement.Domain.Portfolios.Portfolio", null)
                        .WithMany("Assets")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wealth.PortfolioManagement.Domain.Portfolios.PortfolioCurrency", b =>
                {
                    b.HasOne("Wealth.PortfolioManagement.Domain.Portfolios.Portfolio", null)
                        .WithMany("Currencies")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wealth.PortfolioManagement.Domain.Portfolios.Portfolio", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Currencies");
                });
#pragma warning restore 612, 618
        }
    }
}
